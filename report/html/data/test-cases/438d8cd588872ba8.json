{"uid":"438d8cd588872ba8","name":"test_login[正常登录]","fullName":"test_case.login.test_login.TestLogin#test_login","historyId":"6e31539e61156e3214e5c87625535259","time":{"start":1744164836874,"stop":1744164837257,"duration":383},"description":"\n        :param :\n        :return:\n        ","descriptionHtml":"<pre><code>    :param :\n    :return:\n</code></pre>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_case.login.test_login.TestLogin object at 0x000001C2E346D3C0>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.errorCode', 'type': '==', 'value': 0}, 'username': {...ent_request_set_cache': None, 'data': {'password': '123456', 'username': '18800000001'}, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"登录\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_login(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl(in_data).http_request()\n        TearDownHandler(res).teardown_handle()\n>       Assert(in_data['assert_data']).assert_equality(response_data=res.response_data,\n                                                       sql_data=res.sql_data, status_code=res.status_code)\n\ntest_case\\login\\test_login.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\assertion\\assert_control.py:154: in assert_equality\n    self.assert_type_handle(\nutils\\assertion\\assert_control.py:122: in assert_type_handle\n    self.functions_mapping[name](resp_data[0], assert_value, message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncheck_value = -1, expect_value = 0, message = ''\n\n    def equals(\n            check_value: Any, expect_value: Any, message: Text = \"\"\n    ):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value, message\nE       AssertionError\n\nutils\\assertion\\assert_type.py:18: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1744164836483,"stop":1744164836563,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"work_login_init","time":{"start":1744164836563,"stop":1744164836871,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"case_skip","time":{"start":1744164836872,"stop":1744164836872,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"description":"\n        :param :\n        :return:\n        ","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_case.login.test_login.TestLogin object at 0x000001C2E346D3C0>\nin_data = {'assert_data': {'errorCode': {'AssertType': None, 'jsonpath': '$.errorCode', 'type': '==', 'value': 0}, 'username': {...ent_request_set_cache': None, 'data': {'password': '123456', 'username': '18800000001'}, 'dependence_case': False, ...}\ncase_skip = None\n\n    @allure.story(\"登录\")\n    @pytest.mark.parametrize('in_data', eval(re_data), ids=[i['detail'] for i in TestData])\n    def test_login(self, in_data, case_skip):\n        \"\"\"\n        :param :\n        :return:\n        \"\"\"\n        res = RequestControl(in_data).http_request()\n        TearDownHandler(res).teardown_handle()\n>       Assert(in_data['assert_data']).assert_equality(response_data=res.response_data,\n                                                       sql_data=res.sql_data, status_code=res.status_code)\n\ntest_case\\login\\test_login.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\assertion\\assert_control.py:154: in assert_equality\n    self.assert_type_handle(\nutils\\assertion\\assert_control.py:122: in assert_type_handle\n    self.functions_mapping[name](resp_data[0], assert_value, message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncheck_value = -1, expect_value = 0, message = ''\n\n    def equals(\n            check_value: Any, expect_value: Any, message: Text = \"\"\n    ):\n        \"\"\"判断是否相等\"\"\"\n    \n>       assert check_value == expect_value, message\nE       AssertionError\n\nutils\\assertion\\assert_type.py:18: AssertionError","steps":[{"name":"请求URL: https://www.wanandroid.com/user/login","time":{"start":1744164837208,"stop":1744164837208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"请求方式: POST","time":{"start":1744164837208,"stop":1744164837208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"请求头: ","time":{"start":1744164837208,"stop":1744164837209,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"8b66a075fd138f8f","name":"请求头: ","source":"8b66a075fd138f8f.json","type":"application/json","size":204}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"请求数据: ","time":{"start":1744164837210,"stop":1744164837210,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"a7a7859c4025547f","name":"请求数据: ","source":"a7a7859c4025547f.json","type":"application/json","size":51}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"预期数据: ","time":{"start":1744164837210,"stop":1744164837210,"duration":0},"status":"passed","steps":[],"attachments":[{"uid":"df550b43ef493908","name":"预期数据: ","source":"df550b43ef493908.json","type":"application/json","size":193}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true},{"name":"响应耗时(ms): 299","time":{"start":1744164837211,"stop":1744164837211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"响应结果: ","time":{"start":1744164837211,"stop":1744164837255,"duration":44},"status":"passed","steps":[],"attachments":[{"uid":"e2878dc411c9c917","name":"响应结果: ","source":"e2878dc411c9c917.json","type":"application/json","size":76}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"8da2326f400ab3f1","name":"log","source":"8da2326f400ab3f1.txt","type":"text/plain","size":722}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":5,"stepsCount":7,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"登录模块"},{"name":"story","value":"登录"},{"name":"epic","value":"开发平台接口"},{"name":"parentSuite","value":"test_case.login"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"EPCNSZUW1254"},{"name":"thread","value":"33600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.login.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"in_data","value":"{'url': 'https://www.wanandroid.com/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'errorCode': {'jsonpath': '$.errorCode', 'type': '==', 'value': 0, 'AssertType': None}, 'username': {'jsonpath': '$.data.username', 'type': '==', 'value': '18800000001', 'AssertType': None}}, 'headers': None, 'requestType': 'DATA', 'is_run': None, 'data': {'username': '18800000001', 'password': '123456'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"438d8cd588872ba8.json","parameterValues":["{'url': 'https://www.wanandroid.com/user/login', 'method': 'POST', 'detail': '正常登录', 'assert_data': {'errorCode': {'jsonpath': '$.errorCode', 'type': '==', 'value': 0, 'AssertType': None}, 'username': {'jsonpath': '$.data.username', 'type': '==', 'value': '18800000001', 'AssertType': None}}, 'headers': None, 'requestType': 'DATA', 'is_run': None, 'data': {'username': '18800000001', 'password': '123456'}, 'dependence_case': False, 'dependence_case_data': None, 'sql': None, 'setup_sql': None, 'status_code': None, 'teardown_sql': None, 'teardown': None, 'current_request_set_cache': None, 'sleep': None}"]}